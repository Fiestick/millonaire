{"version":3,"sources":["assets/img/hand.png","pages/MainPage.tsx","components/AnswerButton.tsx","components/AnswerValue.tsx","config.ts","pages/QuestionsPage.tsx","pages/FinalePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MainPage","className","src","handImg","alt","to","AnswerButton","prop","classes","data","answerButtonData","correct","push","undefined","join","type","disabled","checked","name","onChange","value","width","height","viewBox","fill","xmlns","d","AnswerValue","param","answerValueData","active","completed","score","JSON","stringify","questions","answerOptions","answerTrue","questionActiveReset","answerOptionsResetList","checkString","QuestionsPage","classActive","classActiveMobBtm","user","parse","React","useState","question","setQuestion","questionActive","setQuestionActive","setAnswerOptions","setActive","history","useHistory","useEffect","activeQuestion","list","selectValue","map","item","length","chackCorrect","chackCorrectList","split","sort","corectAnswerTrue","answerOptionsCorrectList","setTimeout","answerOptionsReset","correctAnswer","answerOptionsUnCorrectList","uncorrectAnswer","answerOptionsCorrect","answerOptionsUnCorrect","getScore","forEach","correctArg","filter","i","onClick","FinalePage","App","setScore","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1314ef6e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hand.24979c70.png\";","import React from 'react'\r\nimport handImg from '../assets/img/hand.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const MainPage:React.FC = () => {\r\n\r\n  \r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"container\">\r\n        <div className=\"main-page\">\r\n          <div className=\"main-page__img\">\r\n            <img src={handImg} alt=\"\"/>\r\n          </div>\r\n          <div className=\"main-page__content\">\r\n            <h1>Who wants to be a millionaire?</h1>\r\n            <NavLink to=\"/question\" className=\"action-button margin-top\">Start</NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"orange-triangle\"></div>\r\n    </div>\r\n  )\r\n} \r\n\r\n","import React from 'react'\r\nimport '../assets/style/answerOptionButton.css'\r\nimport {AnswerButtonComponent} from '../interfase/interfase'\r\n\r\n\r\nexport const AnswerButton:React.FC<AnswerButtonComponent> = ( prop ) => {\r\n  //  \r\n  const classes = [\"answer-option-button\"]\r\n  const data = prop.answerButtonData\r\n\r\n  if(data.correct){\r\n    classes.push(\"correct\")\r\n  } else if(data.correct != undefined) {\r\n    classes.push(\"wrong\")\r\n  }\r\n\r\n  return (\r\n    <label className={classes.join(' ')}>\r\n      <input type=\"checkbox\" disabled={data.disabled} checked={data.checked} name={data.name} onChange={() => {\r\n          prop.onChange(data.checked, data.value, prop)\r\n        }} />\r\n      <div className=\"answer-option-button__bg\">\r\n        <svg width=\"422\" height=\"72\" viewBox=\"0 0 320 56\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M303 28L324 28\"/>\r\n          <path d=\"M-9 28L20 28\"/>\r\n          <path d=\"M42.1754 0.5H277.825C281.539 0.5 285.024 2.29361 287.183 5.31576L303.386 28L287.183 50.6842C285.024 53.7064 281.539 55.5 277.825 55.5H42.1754C38.4615 55.5 34.9762 53.7064 32.8175 50.6842L16.6145 28L32.8175 5.31576C34.9762 2.29361 38.4615 0.5 42.1754 0.5Z\"/>\r\n        </svg>\r\n      </div>\r\n      <div className=\"answer-option-button__body\">\r\n        <p className=\"answer-option-button__index orange\">{data.value }</p>\r\n        <p className=\"answer-option-button__value\">{data.name}</p>\r\n      </div>\r\n    </label>\r\n  )\r\n}","import React from 'react'\r\nimport '../assets/style/answerValueButton.css'\r\nimport { AnswerValueComponet } from '../interfase/interfase'\r\n\r\n\r\nexport const AnswerValue:React.FC<AnswerValueComponet> = ( param ) => {\r\n  const classes = ['answer-value-button']\r\n  if(param.answerValueData.active){\r\n    classes.push('active')\r\n  }\r\n  if(param.answerValueData.completed){\r\n    classes.push('done')\r\n  }\r\n  return (\r\n    <div className={classes.join(' ')}>\r\n      <div className=\"answer-value-button__bg\">\r\n        <svg width=\"376\" height=\"40\" viewBox=\"0 0 376 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M90.2872 0.5H285.713C289.126 0.5 292.362 2.01596 294.547 4.63788L307.349 20L294.547 35.3621C292.362 37.984 289.126 39.5 285.713 39.5H90.2872C86.8742 39.5 83.6375 37.984 81.4526 35.3621L68.6509 20L81.4526 4.63788C83.6376 2.01596 86.8742 0.5 90.2872 0.5Z\"/>\r\n        </svg>\r\n      </div>\r\n      <p className=\"answer-value-button__value\">\r\n        {param.answerValueData.score}$\r\n      </p>\r\n    </div>\r\n  )\r\n}","import { User } from './interfase/interfase'\n\nconst user: User = {\n  questions: [\n    {\n      name: 'Як буде виглдати число 5 в двоїчній системи обчислення',\n      answerOptions: [\n        {\n          name: '0110',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: '1010',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: '0001',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: '0111',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 500,\n      answerTrue: 'A',\n    },\n    {\n      name: 'Хто з перечислених людей є представником IT',\n      answerOptions: [\n        {\n          name: 'Боб Марли',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: 'Джордж Паттон',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: 'Роберт Мартин',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: 'Тарас Шевченко',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 1000,\n      answerTrue: 'C',\n    },\n    {\n      name: 'Виберіть числа Фібоначі',\n      answerOptions: [\n        {\n          name: '1',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: '10',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: '4',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: '3',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 2000,\n      answerTrue: 'AD',\n    },\n    {\n      name: 'Коли поччалася Друга Світова війна',\n      answerOptions: [\n        {\n          name: '1939',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: '1941',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: '1945',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: '1917',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 4000,\n      answerTrue: 'A',\n    },\n    {\n      name: 'Чому дорівнює число π',\n      answerOptions: [\n        {\n          name: '5.20...',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: '3.14...',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: '8.11...',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: '4.9...',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 8000,\n      answerTrue: 'B',\n    },\n    {\n      name: 'Хто перша людина яка полетіла в космос?',\n      answerOptions: [\n        {\n          name: 'Остап Вишня',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: 'Остап Бендер',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: 'Юрій Гагарін',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: 'Джоні Депп',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 16000,\n      answerTrue: 'C',\n    },\n    {\n      name: 'Орган який перекачує кров',\n      answerOptions: [\n        {\n          name: 'Печінка',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: 'Нирки',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: 'Селезінка',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: 'Серцце',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 64000,\n      answerTrue: 'D',\n    },\n    {\n      name: 'Чому дорівнює 2^8',\n      answerOptions: [\n        {\n          name: '2048',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: '8',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: '256',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: '512',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 128000,\n      answerTrue: 'C',\n    },\n    {\n      name: 'як позначається золото в таблиці Менделєєва',\n      answerOptions: [\n        {\n          name: 'Ra',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: 'Be',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: 'Au',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: 'N',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 250000,\n      answerTrue: 'C',\n    },\n    {\n      name: 'Чому дорівнює число π',\n      answerOptions: [\n        {\n          name: '5.20...',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: '3.14...',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: '8.11...',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: '4.9...',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 500000,\n      answerTrue: 'B',\n    },\n    {\n      name: 'Який книгу написав Тарас Григорьевич Шевченко',\n      answerOptions: [\n        {\n          name: 'Кобзар',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: 'Чумак',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: 'Война и мир',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: 'Маленький принц',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 800000,\n      answerTrue: 'A',\n    },\n    {\n      name: 'Якою наукою займався Ісаак Ньютон',\n      answerOptions: [\n        {\n          name: 'Математика',\n          value: 'A',\n          checked: false,\n        },\n        {\n          name: 'Фізика',\n          value: 'B',\n          checked: false,\n        },\n        {\n          name: 'Хімія',\n          value: 'C',\n          checked: false,\n        },\n        {\n          name: 'Історія',\n          value: 'D',\n          checked: false,\n        },\n      ],\n      completed: false,\n      score: 1000000,\n      answerTrue: 'B',\n    },\n  ],\n}\n\nconst data = JSON.stringify(user)\n\nexport { data }\n","import React , {useEffect} from 'react'\r\nimport {AnswerButton} from '../components/AnswerButton'\r\nimport {AnswerValue} from '../components/AnswerValue'\r\nimport { data } from \"../config\"\r\nimport { User, Question, AnswerOptions, QuestionsPageComponent } from '../interfase/interfase'\r\nimport { useHistory } from 'react-router-dom'\r\nimport '../assets/style/questionsPage.css'\r\n\r\nconst questionActiveReset:Question = {\r\n  answerOptions: [\r\n    {name: '',value: '', checked: false},\r\n    {name: '',value: '', checked: false}\r\n  ],\r\n  completed: false,\r\n  answerTrue: '',\r\n  name: '',\r\n  score: 0,\r\n}\r\n\r\nconst answerOptionsResetList: Array<AnswerOptions> = [\r\n  {name: '',value: '', checked: false},\r\n  {name: '',value: '', checked: false}\r\n]\r\n\r\nlet checkString = ''\r\n\r\nexport const QuestionsPage:React.FC<QuestionsPageComponent> = ( prop ) => {\r\n  const classActive = ['questions-page__score']\r\n  const classActiveMobBtm = ['mobBtm']\r\n  const user:User = JSON.parse(data)\r\n  const [question, setQuestion ] = React.useState<Question[]>(user.questions)\r\n  const [questionActive, setQuestionActive] = React.useState<Question>(questionActiveReset)\r\n  const [answerOptions, setAnswerOptions] = React.useState<Array<AnswerOptions>>(answerOptionsResetList)\r\n  const [active, setActive] = React.useState<Boolean>(false)\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    for(let activeQuestion of question){\r\n      if(!activeQuestion.completed){\r\n        let list = activeQuestion.answerOptions\r\n        setQuestionActive(activeQuestion)\r\n        setAnswerOptions(list)\r\n        activeQuestion.active = true\r\n        break\r\n      } \r\n    }\r\n  })\r\n  \r\n  const selectValue = (checked: boolean, value: string) => {\r\n    if(!checked){\r\n      setAnswerOptions(answerOptions.map(item => {\r\n        if(item.value == value){\r\n          item.checked = true\r\n        }\r\n        return item\r\n      }))\r\n      switch (questionActive.answerTrue.length > 1){\r\n        case false: {\r\n          chackCorrect(value)\r\n        } break\r\n        case true: {\r\n          chackCorrectList(value)\r\n        } break\r\n      }\r\n    } else {\r\n      setAnswerOptions(answerOptions.map(item => {\r\n        if(item.value == value){\r\n          item.checked = false\r\n        }\r\n        return item\r\n      }))\r\n    }\r\n  }\r\n\r\n  const chackCorrectList = (value: string) => {\r\n    checkString = checkString + value\r\n    checkString = checkString.split('').sort().join('')\r\n    const corectAnswerTrue = questionActive.answerTrue.split('').sort().join('')\r\n    if(checkString.length <= questionActive.answerTrue.length && checkString === corectAnswerTrue){\r\n      setAnswerOptions(answerOptionsCorrectList())\r\n      setTimeout(() => {\r\n        setAnswerOptions(answerOptionsReset())\r\n        correctAnswer()\r\n      }, 2000)\r\n    } else {\r\n      switch (checkString.length >= questionActive.answerTrue.length){\r\n        case true: \r\n          setAnswerOptions(answerOptionsUnCorrectList())\r\n          setTimeout(() => {\r\n            uncorrectAnswer()\r\n          }, 2000)\r\n          break\r\n      }\r\n    }\r\n  }\r\n\r\n  const chackCorrect = (param: string) => {\r\n    if(param === questionActive.answerTrue){\r\n      setAnswerOptions(answerOptionsCorrect(param))\r\n      setTimeout(() => {\r\n        correctAnswer()\r\n      }, 2000)\r\n      \r\n    } else {\r\n      setAnswerOptions(answerOptionsUnCorrect(param))\r\n      setTimeout(() => {\r\n        uncorrectAnswer()\r\n      }, 2000)\r\n    }\r\n    \r\n  }\r\n\r\n  const correctAnswer = () => {\r\n    prop.getScore(questionActive.score) \r\n    if(questionActive === question[question.length - 1] ){\r\n      checkString = ''\r\n      history.push('/final')\r\n    } else {\r\n      setQuestion(question.map(item => {\r\n        if(item === questionActive){\r\n          item.completed = true\r\n          return item\r\n        } else{\r\n          return item\r\n        }\r\n      }))\r\n    }\r\n  }\r\n\r\n  const uncorrectAnswer = () => {\r\n    setQuestion(question.map(item => {\r\n      if(item === questionActive){\r\n        item.completed = false\r\n        return item\r\n      } else{\r\n        return item\r\n      }\r\n    }))\r\n    checkString = ''\r\n    setAnswerOptions(answerOptionsReset())\r\n    history.push('/final')\r\n  }\r\n\r\n  const answerOptionsCorrect = (param: string):Array<AnswerOptions> => {\r\n    let list = answerOptions.map(item => {\r\n      item.checked = false\r\n      item.disabled = true\r\n      if(item.value === param){\r\n        item.correct = true\r\n        return item\r\n      } else{\r\n        item.disabled = true\r\n        return item\r\n      }\r\n    }) \r\n    return list\r\n  }\r\n\r\n  const answerOptionsUnCorrect = (param: string):Array<AnswerOptions> => {\r\n    let list = answerOptions.map(item => {\r\n      item.checked = false\r\n      item.disabled = true\r\n      if(item.value === param){\r\n        item.correct = false\r\n        return item\r\n      } else{\r\n        return item\r\n      }\r\n    })\r\n    return list\r\n  }\r\n\r\n  const answerOptionsCorrectList = ():Array<AnswerOptions> => {\r\n    let listReturn = answerOptions.map(item => {\r\n      let correctList = questionActive.answerTrue.split('')\r\n      correctList.forEach((correctArg) => {\r\n        item.disabled = true\r\n        if(item.value == correctArg){\r\n          item.correct = true\r\n          return item\r\n        } else {\r\n          item.disabled = true\r\n          return item\r\n        }\r\n      })\r\n      return item\r\n    })\r\n    return listReturn\r\n  }\r\n\r\n  const answerOptionsUnCorrectList = ():Array<AnswerOptions> => {\r\n    let listReturn = answerOptions.map(item => {\r\n      item.disabled = true\r\n      if(item.checked){\r\n        item.correct = false\r\n        return item\r\n      }\r\n      return item\r\n    })\r\n    return listReturn\r\n  }\r\n  \r\n  const answerOptionsReset = ():Array<AnswerOptions> => {\r\n    let list =  answerOptions.map(item => {\r\n      item.checked = false\r\n      item.correct = null\r\n      item.disabled = false\r\n      return item\r\n    })\r\n    return list\r\n  }\r\n\r\n  const togleActive = () => {\r\n    setActive(!active)\r\n  }\r\n\r\n  if(active){\r\n    classActive.push('active')\r\n    classActiveMobBtm.push('active')\r\n  } else {\r\n    classActive.filter(item => !item == active)\r\n    classActiveMobBtm.filter(item => !item == active)\r\n  }\r\n\r\n  if(questionActive){\r\n    return (\r\n      <div className=\"container-fluid gray\">\r\n        <div className=\"questions-page\">\r\n          <div className=\"questions-page__body\">\r\n            <h2>{questionActive?.name}</h2>\r\n            <form className=\"answer-option\">\r\n              {answerOptions.map( (param, i) => {\r\n                return (\r\n                  <AnswerButton\r\n                    answerButtonData = {\r\n                      {\r\n                        name: param.name,\r\n                        value: param.value,\r\n                        correct: param.correct,\r\n                        disabled: param.disabled,\r\n                        checked: param.checked\r\n                      }\r\n                    }\r\n                    onChange={selectValue}\r\n                    key={i}\r\n                  />\r\n                )\r\n              })}\r\n            </form>\r\n          </div>\r\n          <div className={classActive.join(' ')}>\r\n            {question.map( (param, i) => {\r\n                return (\r\n                  <AnswerValue \r\n                    answerValueData = { \r\n                      {\r\n                      score: param.score,\r\n                      active: param.active,\r\n                      completed: param.completed\r\n                      }\r\n                    }\r\n                    key = {i}\r\n                  />\r\n                )\r\n              })}\r\n          </div>\r\n          <div className={classActiveMobBtm.join(' ')} onClick={togleActive}>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return <div></div>\r\n  }\r\n} ","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport handImg from '../assets/img/hand.png'\r\n\r\nexport const FinalePage:React.FC<{score: number}> = ( {score} ) => {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"container\">\r\n        <div className=\"final-page\">\r\n          <div className=\"final-page__img\">\r\n            <img src={handImg} alt=\"\"/>\r\n          </div>\r\n          <div className=\"final-page__content\">\r\n            <div className=\"final-page__text\">\r\n              <h2 className=\"gray\">Total score:</h2>\r\n              <h1>${score} earned</h1>\r\n            </div>\r\n            <NavLink to=\"/\" className=\"action-button margin-top\">Try again</NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n} \r\n","import React from 'react';\nimport './assets/style/App.css';\nimport {MainPage} from './pages/MainPage'\nimport {QuestionsPage} from './pages/QuestionsPage'\nimport {FinalePage} from './pages/FinalePage'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\n\nfunction App() {\n\n  const [score, setScore] = React.useState<number>(0)\n\n  const getScore = (score: number) => {\n    setScore(score)\n  }\n\n  const props = {\n    score: getScore\n  }\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact>\n          <MainPage />\n        </Route>\n        <Route path=\"/question\" exact>\n          <QuestionsPage getScore={getScore} />\n        </Route>\n        <Route  path=\"/final\"  exact>\n          <FinalePage score={score} />\n        </Route>\n      </Switch>\n      <Redirect to=\"/\" />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}